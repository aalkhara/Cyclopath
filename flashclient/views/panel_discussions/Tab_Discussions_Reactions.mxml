<?xml version="1.0" encoding="utf-8"?>

<!-- Copyright (c) 2006-2013 Regents of the University of Minnesota.
     For licensing terms, see the file LICENSE. -->

<views_panel_discussions:Tab_Discussions_Base
   xmlns="*"
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns:utils_misc="utils.misc.*"
   xmlns:views_commands="views.commands.*"
   xmlns:views_panel_base="views.panel_base.*"
   xmlns:views_panel_discussions="views.panel_discussions.*"
   xmlns:views_panel_settings="views.panel_settings.*"
   xmlns:views_panel_util="views.panel_util.*"
   width="100%"
   height="100%"
   horizontalScrollPolicy="off"
   label=""
   >

   <mx:Script><![CDATA[

      import mx.collections.ArrayCollection;
      import mx.core.Container;
      import mx.events.FlexEvent;
      import mx.states.*;

      import gwis.GWIS_Checkout_Base;
      import gwis.GWIS_Checkout_Count;
      import utils.misc.Inflector;
      import utils.misc.Logging;
      import views.panel_base.Detail_Panel_Base;

      // *** Class attributes

      protected static var log:Logging = Logging.get_logger('##TbDsc-Reac');

      // *** Startup methods

      //
      override protected function on_initialize(ev:FlexEvent) :void
      {
         m4_DEBUG('on_initialize');

         super.on_initialize(ev);


         this.thread_list_pager.type_plural = 'reactions';

         // Set the callbacks for the count GWIS query to record the counts for
         // likes/dislikes/comments for reactions.
      }

      // *** Base class overrides

      //
      override protected function consume_thread_list(
         gwis_req:GWIS_Checkout_Base, xml:XML) :void
      {
         super.consume_thread_list(gwis_req, xml);
      }

      //
      override public function fetch_list(
         update_paginator_count:Boolean=false,
         qfs:Query_Filters=null)
            :void
      {
         if (qfs === null) {
            qfs = this.qfs;
         }

         // FIXME: Replace with only_rhs_stack_ids?
         qfs.filter_by_thread_type = 'reaction';

         super.fetch_list(update_paginator_count, qfs);
      }

      //
      override protected function get_filter_by_data_provider(
         subject_plural:String='',
         subject_abbrev:String='') :ArrayCollection
      {
         var subject_plural:String = 'route reactions';
         var subject_abbrev:String = 'reactions';
         return super.get_filter_by_data_provider(subject_plural,
                                                  subject_abbrev);
      }

      // *** Base class getters and setters

      //
      override public function get panel_owning_panel() :Detail_Panel_Base
      {
         m4_DEBUG('get pnl_owng_pnl: returning not activating activity_panel');
         return G.app.activity_panel;
      }

      // ***

   ]]></mx:Script>

</views_panel_discussions:Tab_Discussions_Base>

